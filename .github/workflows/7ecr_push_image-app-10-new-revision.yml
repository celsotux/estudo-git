name: 7-Deploy IMAGE app10 to ECR New Revision

on:
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    env:
      REPOSITORY_NAME: ${{ secrets.REPOSITORY_NAME }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      IMAGE_VERSION: ${{ github.run_number }}-$(date +"%Y%m%d%H%M%S")  # Define a versão da imagem com um número único e a data/hora atual
      IMAGE_NAME: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.REPOSITORY_NAME }}:${IMAGE_VERSION}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker image
        run: |
          docker build -t hit-game-app10 ./app

      - name: Tag Docker image with version
        run: |
          docker tag hit-game-app10:latest $IMAGE_NAME

      - name: Push Docker image to ECR
        run: | 
          docker push $IMAGE_NAME

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Register new task definition
        run: |
          TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition estudo-dev-app-game10)
          NEW_TASK_DEFINITION=$(echo $TASK_DEFINITION | jq --arg IMAGE_NAME "$IMAGE_NAME" '.taskDefinition | .containerDefinitions[0].image=$IMAGE_NAME | del(.status,.revision,.taskDefinitionArn,.requiresAttributes,.compatibilities,.registeredAt,.registeredBy)')
          echo "$NEW_TASK_DEFINITION" > new-task-def.json
          aws ecs register-task-definition --cli-input-json file://new-task-def.json

      - name: Set outputs
        run: |
          echo "REPOSITORY_NAME=${REPOSITORY_NAME}" >> $GITHUB_OUTPUT
          echo "AWS_REGION=${AWS_REGION}" >> $GITHUB_OUTPUT
