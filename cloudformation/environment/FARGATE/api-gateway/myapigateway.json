{
    "Resources": {
      "MyApiGateway": {
        "Type": "AWS::ApiGateway::RestApi",
        "Properties": {
          "Name": "MyAPIGateway",
          "Description": "API Gateway for Slack Integration"
        }
      },
  
      "MyApiResource": {
        "Type": "AWS::ApiGateway::Resource",
        "Properties": {
          "RestApiId": { "Ref": "MyApiGateway" },
          "ParentId": { "Fn::GetAtt": ["MyApiGateway", "RootResourceId"] },
          "PathPart": "update-service"
        }
      },
  
      "MyApiMethod": {
        "Type": "AWS::ApiGateway::Method",
        "Properties": {
          "RestApiId": { "Ref": "MyApiGateway" },
          "ResourceId": { "Ref": "MyApiResource" },
          "HttpMethod": "POST",
          "AuthorizationType": "AWS_IAM",
          "Integration": {
            "IntegrationHttpMethod": "POST",
            "Type": "AWS_PROXY",
            "Uri": {
              "Fn::Sub": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:791918029132:function:deploy_ecs/invocations"
            }
          },
          "MethodResponses": [
            {
              "StatusCode": "200",
              "ResponseModels": {
                "application/json": "Empty"
              }
            }
          ],
          "RequestModels": {
            "application/json": "Empty"
          }
        }
      },
  
      "MyLambdaFunction": {
        "Type": "AWS::Lambda::Function",
        "Properties": {
          "Handler": "index.handler",
          "Role": { "Fn::GetAtt": ["LambdaExecutionRole", "Arn"] },
          "Runtime": "python3.8",
          "Timeout": 30,
          "Code": {
            "ZipFile": {
              "Fn::Sub": "import json\n\ndef handler(event, context):\n    return {\n        'statusCode': 200,\n        'body': json.dumps('Hello from Lambda!')\n    }"
            }
          }
        }
      },
  
      "LambdaExecutionRole": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "Service": "lambda.amazonaws.com"
                },
                "Action": "sts:AssumeRole"
              }
            ]
          },
          "Policies": [
            {
              "PolicyName": "LambdaInvokePermission",
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Action": "lambda:invokeFunction",
                    "Resource": { "Fn::GetAtt": ["MyLambdaFunction", "Arn"] }
                  }
                ]
              }
            }
          ]
        }
      },
  
      "MyLambdaPermission": {
        "Type": "AWS::Lambda::Permission",
        "Properties": {
          "FunctionName": { "Fn::GetAtt": ["MyLambdaFunction", "Arn"] },
          "Action": "lambda:InvokeFunction",
          "Principal": "apigateway.amazonaws.com",
          "SourceArn": {
            "Fn::Sub": "arn:aws:execute-api:us-east-1:791918029132:${MyApiGateway}/*/POST/update-service"
          }
        }
      }
    }
  }
  